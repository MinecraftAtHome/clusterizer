CREATE TABLE users (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    name TEXT NOT NULL
);

CREATE UNIQUE INDEX users_name_key
    ON users (LOWER(name));

CREATE TABLE projects (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    name TEXT NOT NULL,
    active BOOL NOT NULL
);

CREATE TABLE platforms (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    name TEXT NOT NULL
);

CREATE TABLE project_versions (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    project_id INT8 NOT NULL,
    platform_id INT8 NOT NULL,
    archive_url TEXT NOT NULL,

    FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (platform_id) REFERENCES platforms(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE tasks (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    project_id INT8 NOT NULL,
    stdin TEXT NOT NULL,

    FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE assignments (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    task_id INT8 NOT NULL,
    user_id INT8 NOT NULL,
    canceled BOOL NOT NULL DEFAULT FALSE,

    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE UNIQUE INDEX assignments_task_id_user_id_key
    ON assignments (task_id, user_id)
    WHERE NOT canceled;

CREATE TABLE results (
    id INT8 GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    assignment_id INT8 NOT NULL UNIQUE,
    stdout TEXT NOT NULL,
    stderr TEXT NOT NULL,
    exit_code INT4 NOT NULL,

    FOREIGN KEY (assignment_id) REFERENCES assignments(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);
