on: push
name: Integration tests

env:
  DATABASE_URL: "postgres://postgres@postgres/clusterizer"

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    container: rust:bookworm
    services:
      postgres:
        image: postgres
        env:
         POSTGRES_HOST_AUTH_METHOD: trust
         POSTGRES_DB: clusterizer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
        - uses: actions/checkout@v4
        - uses: Swatinem/rust-cache@v2
        - name: Install netcat
          run: |
            apt update
            apt install netcat-traditional -y
        - name: sqlx install
          run: cargo install sqlx-cli
        - name: rustup install clippy
          run: rustup component add clippy rustfmt
        - name: sqlx setup database
          run: sqlx database setup
          working-directory: ./server
        - name: Compile server
          run: cargo build
          working-directory: ./server
        - name: Compile Client
          run: cargo build
          working-directory: ./client
        - name: Start server in background
          run: cargo run & echo $! > server.pid
          working-directory: ./server
        - name: Sleep for 30 seconds
          uses: jakejarvis/wait-action@master
          with:
            time: '30s'
        - name: Register client
          run: cargo run -- -s http://localhost:3000 register -u test > apikey.txt
          working-directory: ./client
        - name: Stop server
          run: kill $(cat server.pid)